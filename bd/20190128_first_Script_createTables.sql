
DROP TABLE "BRAIN".LEVELS;

CREATE TABLE "BRAIN".LEVELS
(
    LEVELS_ID VARCHAR(64) NOT NULL,
    CODE INT NOT NULL,
    INTITULE VARCHAR(64),
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (LEVELS_ID)
);

DROP TABLE "BRAIN".USERS;

CREATE TABLE "BRAIN".USERS
(
    USERS_ID VARCHAR(64) NOT NULL,
    USER_CODE VARCHAR(64) NOT NULL,
    LOGIN VARCHAR(100) NOT NULL,
    PASSWORD CHAR(32) NOT NULL,
    LEVELS_ID VARCHAR(64) NOT NULL,
    FIRST_NAME VARCHAR(100),
    LAST_NAME VARCHAR(100),
    TEL VARCHAR(20),
    EMAIL VARCHAR(200),
    CNI VARCHAR(45),
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (USERS_ID)
);

INSERT INTO "BRAIN".USERS (USERS_ID, USER_CODE, LOGIN, PASSWORD, LEVELS_ID, FIRST_NAME, LAST_NAME, TEL, EMAIL, CNI, STATE_DB, DT_CREATED, DT_MODIFIED, USER_CREATED, USER_MODIFIED) 
	VALUES ('1', '1', 'sa', '21232f297a57a5a743894a0e4a801fc3', 'CB-1', 'admin', 'admin', NULL, NULL, NULL, DEFAULT, CURRENT_DATE, CURRENT_TIMESTAMP, '1', '1');

	
INSERT INTO "BRAIN".LEVELS (LEVELS_ID, CODE, INTITULE, STATE_DB, DT_CREATED, DT_MODIFIED, USER_CREATED, USER_MODIFIED) 
    VALUES ('CB-1', 1, 'Business_Level_Administrateur', DEFAULT, CURRENT_DATE, CURRENT_TIMESTAMP, '1', '1')
    , ('CB-2', 2, 'Business_Level_Utilisateur', DEFAULT, CURRENT_DATE, CURRENT_TIMESTAMP, '1', '1')
    , ('CB-3', 3, 'Business_Level_Defaut', DEFAULT, CURRENT_DATE, CURRENT_TIMESTAMP, '1', '1');

Alter Table "BRAIN".USERS Add FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID);
Alter Table "BRAIN".USERS Add FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID);
Alter Table "BRAIN".USERS Add FOREIGN KEY (LEVELS_ID) REFERENCES LEVELS(LEVELS_ID);

Alter Table "BRAIN".LEVELS Add FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID);
Alter Table "BRAIN".LEVELS Add FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID);


DROP TABLE "BRAIN".WIDGET;

CREATE TABLE "BRAIN".WIDGET
(
    WIDGET_ID VARCHAR(64) NOT NULL,
    NAME VARCHAR(64) NOT NULL,
    PARENT VARCHAR(64) NOT NULL,
    LABEL VARCHAR(64) NOT NULL,
    LEVELS_ID VARCHAR(64) NOT NULL,
    AVAILABLE SMALLINT,
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (WIDGET_ID),
    FOREIGN KEY (PARENT) REFERENCES WIDGET(WIDGET_ID),
    FOREIGN KEY (LEVELS_ID) REFERENCES LEVELS(LEVELS_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);

INSERT INTO "BRAIN".WIDGET (WIDGET_ID, NAME, PARENT, LABEL, LEVELS_ID, AVAILABLE, DT_CREATED, DT_MODIFIED, USER_CREATED, USER_MODIFIED)
	VALUES ('1', 'btnAdministration', '1', 'Business_Libelle_Administration', 'CB-1', 1, CURRENT_DATE, CURRENT_TIMESTAMP, '1', '1');


DROP TABLE "BRAIN".ANNEE_ACADEMIC;
	
CREATE TABLE "BRAIN".ANNEE_ACADEMIC
(
    ANNEE_ACADEMIC_ID VARCHAR(64) NOT NULL,
    SESSION VARCHAR(64) NOT NULL,
    DATE_OUVERTURE DATE not null,
    DATE_FERMETURE DATE,
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (ANNEE_ACADEMIC_ID),
    CONSTRAINT SESSIONFK UNIQUE (SESSION),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);

DROP TABLE "BRAIN".TRIMESTRE;
	
CREATE TABLE "BRAIN".TRIMESTRE
(
    TRIMESTRE_ID VARCHAR(64) NOT NULL,
    CODE VARCHAR(64) NOT NULL,
    DATE_OUVERTURE DATE NOT NULL,
    DATE_FERMETURE DATE,
    ANNEE_ACADEMIC_ID VARCHAR(64) NOT NULL,
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (TRIMESTRE_ID),
    CONSTRAINT TRIMESTREFK UNIQUE (CODE, ANNEE_ACADEMIC_ID),
    FOREIGN KEY (ANNEE_ACADEMIC_ID) REFERENCES ANNEE_ACADEMIC(ANNEE_ACADEMIC_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);

DROP TABLE "BRAIN".SEQUENCE;
	
CREATE TABLE "BRAIN".SEQUENCE
(
    SEQUENCE_ID VARCHAR(64) NOT NULL,
    CODE VARCHAR(64) NOT NULL,
    DATE_OUVERTURE DATE NOT NULL,
    DATE_FERMETURE DATE,
    TRIMESTRE_ID VARCHAR(64) NOT NULL,
    ANNEE_ACADEMIC_ID VARCHAR(64) NOT NULL,
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (SEQUENCE_ID),
    CONSTRAINT SEQUENCEFK UNIQUE (CODE, TRIMESTRE_ID, ANNEE_ACADEMIC_ID),
    FOREIGN KEY (TRIMESTRE_ID) REFERENCES TRIMESTRE(TRIMESTRE_ID),
    FOREIGN KEY (ANNEE_ACADEMIC_ID) REFERENCES ANNEE_ACADEMIC(ANNEE_ACADEMIC_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);

DROP TABLE "BRAIN".ETABLISSEMENT;
	
CREATE TABLE "BRAIN".ETABLISSEMENT
(
    ETABLISSEMENT_ID VARCHAR(64) NOT NULL,
    NAME_ABREGE VARCHAR(64) NOT NULL,
    FULL_NAME VARCHAR(255) NOT NULL,
    ADRESSE VARCHAR(255) NOT NULL,
    VILLE VARCHAR(255) NOT NULL,
    TELEPHONE VARCHAR(16) NOT NULL,
    EMAIL VARCHAR(64) NOT NULL,
    SESSION VARCHAR(64),
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (ETABLISSEMENT_ID),
    FOREIGN KEY (SESSION) REFERENCES ANNEE_ACADEMIC(SESSION),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);

DROP TABLE "BRAIN".PARAMETRE_ANNEE_ACADEMIC;
	
CREATE TABLE "BRAIN".PARAMETRE_ANNEE_ACADEMIC
(
    PARAMETRE_ANNEE_ACADEMIC_ID VARCHAR(64) NOT NULL,
    ETABLISSEMENT_ID VARCHAR(64) NOT NULL,
    SESSION VARCHAR(64) NOT NULL,
    TRIMESTRE_ID VARCHAR(64),
    SEQUENCE_ID VARCHAR(64),
    STATUT VARCHAR(64),
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (PARAMETRE_ANNEE_ACADEMIC_ID),
    CONSTRAINT PARAMETRE_ANNEE_ACADEMICFK UNIQUE (ETABLISSEMENT_ID, SESSION),
    FOREIGN KEY (ETABLISSEMENT_ID) REFERENCES ETABLISSEMENT(ETABLISSEMENT_ID),
    FOREIGN KEY (SESSION) REFERENCES ANNEE_ACADEMIC(SESSION),
    FOREIGN KEY (TRIMESTRE_ID) REFERENCES TRIMESTRE(TRIMESTRE_ID),
    FOREIGN KEY (SEQUENCE_ID) REFERENCES SEQUENCE(SEQUENCE_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);

DROP TABLE "BRAIN".SECTION;
	
CREATE TABLE "BRAIN".SECTION
(
    SECTION_ID VARCHAR(64) NOT NULL,
    CODE VARCHAR(64) NOT NULL,
    INTITULE VARCHAR(64) NOT NULL,
    ETABLISSEMENT_ID VARCHAR(64) NOT NULL,
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (SECTION_ID),
    FOREIGN KEY (ETABLISSEMENT_ID) REFERENCES ETABLISSEMENT(ETABLISSEMENT_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);


DROP TABLE "BRAIN".CLASSE;
	
CREATE TABLE "BRAIN".CLASSE
(
    CLASSE_ID VARCHAR(64) NOT NULL,
    CODE VARCHAR(64) NOT NULL,
    INTITULE VARCHAR(64) NOT NULL,
    SECTION_ID VARCHAR(64) NOT NULL,
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (CLASSE_ID),
    FOREIGN KEY (SECTION_ID) REFERENCES SECTION(SECTION_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);

DROP TABLE "BRAIN".GROUPE;
	
CREATE TABLE "BRAIN".GROUPE
(
    GROUPE_ID VARCHAR(64) NOT NULL,
    CODE VARCHAR(64) NOT NULL,
    INTITULE VARCHAR(64) NOT NULL,
    CLASSE_ID VARCHAR(64) NOT NULL,
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (GROUPE_ID),
    FOREIGN KEY (CLASSE_ID) REFERENCES CLASSE(CLASSE_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);

DROP TABLE "BRAIN".SALLE;
	
CREATE TABLE "BRAIN".SALLE
(
    SALLE_ID VARCHAR(64) NOT NULL,
    CODE VARCHAR(64) NOT NULL,
    INTITULE VARCHAR(64) NOT NULL,
    GROUPE_ID VARCHAR(64) DEFAULT NULL,
    CLASSE_ID VARCHAR(64) NOT NULL,
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (SALLE_ID),
    FOREIGN KEY (GROUPE_ID) REFERENCES GROUPE(GROUPE_ID),
    FOREIGN KEY (CLASSE_ID) REFERENCES CLASSE(CLASSE_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);

DROP TABLE "BRAIN".STUDENT;
	
CREATE TABLE "BRAIN".STUDENT
(
    STUDENT_ID VARCHAR(64) NOT NULL,
    CODE VARCHAR(64) NOT NULL,
    MATRICULE VARCHAR(64) NOT NULL,
    FIRST_NAME VARCHAR(64) NOT NULL,
    LAST_NAME VARCHAR(64) NOT NULL,
    BIRTHDAY DATE NOT NULL,
    BORN_LOCATION VARCHAR(64) NOT NULL,
    SEXE VARCHAR(64) NOT NULL,
    PROFIL BLOB,
    SALLE_ID VARCHAR(64) NOT NULL,
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (STUDENT_ID),
    FOREIGN KEY (SALLE_ID) REFERENCES SALLE(SALLE_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);

DROP TABLE "BRAIN".COURS;

CREATE TABLE "BRAIN".COURS
(
    COURS_ID VARCHAR(64) NOT NULL,
    CODE VARCHAR(64) NOT NULL,
    LIBELLE_FR VARCHAR(64) NOT NULL,
    LIBELLE_EN VARCHAR(64) NOT NULL,
    CREDIT DOUBLE NOT NULL DEFAULT 0,
    CLASSE_ID VARCHAR(64) NOT NULL,
    GROUPE_ID VARCHAR(64),
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (COURS_ID),
    FOREIGN KEY (CLASSE_ID) REFERENCES CLASSE(CLASSE_ID),
    FOREIGN KEY (GROUPE_ID) REFERENCES GROUPE(GROUPE_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);

DROP TABLE "BRAIN".PROFESSION;
	
CREATE TABLE "BRAIN".PROFESSION
(
    PROFESSION_ID VARCHAR(64) NOT NULL,
    CODE VARCHAR(64) NOT NULL,
    INTITULE VARCHAR(64) NOT NULL,
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (PROFESSION_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);

DROP TABLE "BRAIN".ENSEIGNANT;
		
CREATE TABLE "BRAIN".ENSEIGNANT
(
    ENSEIGNANT_ID VARCHAR(64) NOT NULL,
    MATRICULE VARCHAR(64) NOT NULL,
    FIRST_NAME VARCHAR(64) NOT NULL,
    LAST_NAME VARCHAR(64) NOT NULL,
    BIRTHDAY DATE NOT NULL,
    BORN_LOCATION VARCHAR(64) NOT NULL,
    CNI VARCHAR(64) NOT NULL,
    DATE_DELIVRANCE DATE NOT NULL,
    DATE_EXPIRE DATE NOT NULL,
    SEXE VARCHAR(64) NOT NULL,
    PROFESSION_ID VARCHAR(64) NOT NULL,
    PROFIL BLOB,
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (ENSEIGNANT_ID),
    FOREIGN KEY (PROFESSION_ID) REFERENCES PROFESSION(PROFESSION_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);

DROP TABLE "BRAIN".AFFECTATION_COURS;
	
CREATE TABLE "BRAIN".AFFECTATION_COURS
(
    AFFECTATION_COURS_ID VARCHAR(64) NOT NULL,
    COURS_ID VARCHAR(64) NOT NULL,
    ENSEIGNANT_ID VARCHAR(64) NOT NULL,
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (AFFECTATION_COURS_ID),
    FOREIGN KEY (COURS_ID) REFERENCES COURS(COURS_ID),
    FOREIGN KEY (ENSEIGNANT_ID) REFERENCES ENSEIGNANT(ENSEIGNANT_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);

DROP TABLE "BRAIN".NOTE;
	
CREATE TABLE "BRAIN".NOTE
(
    NOTE_ID VARCHAR(64) NOT NULL,
    STUDENT_ID VARCHAR(64) NOT NULL,
    COURS_ID VARCHAR(64) NOT NULL,
    ENSEIGNANT_ID VARCHAR(64) NOT NULL,
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (NOTE_ID),
    FOREIGN KEY (COURS_ID) REFERENCES COURS(COURS_ID),
    FOREIGN KEY (ENSEIGNANT_ID) REFERENCES ENSEIGNANT(ENSEIGNANT_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);
/*
DROP TABLE "BRAIN".NOTE;
	
CREATE TABLE "BRAIN".NOTE
(
    NOTE_ID VARCHAR(64) NOT NULL,
    STUDENT_ID VARCHAR(64) NOT NULL,
    COURS_ID VARCHAR(64) NOT NULL,
    ENSEIGNANT_ID VARCHAR(64) NOT NULL,
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (NOTE_ID),
    FOREIGN KEY (COURS_ID) REFERENCES COURS(COURS_ID),
    FOREIGN KEY (ENSEIGNANT_ID) REFERENCES ENSEIGNANT(ENSEIGNANT_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);

DROP TABLE "BRAIN".NOTE;
	
CREATE TABLE "BRAIN".NOTE
(
    NOTE_ID VARCHAR(64) NOT NULL,
    STUDENT_ID VARCHAR(64) NOT NULL,
    COURS_ID VARCHAR(64) NOT NULL,
    ENSEIGNANT_ID VARCHAR(64) NOT NULL,
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (NOTE_ID),
    FOREIGN KEY (COURS_ID) REFERENCES COURS(COURS_ID),
    FOREIGN KEY (ENSEIGNANT_ID) REFERENCES ENSEIGNANT(ENSEIGNANT_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);

DROP TABLE "BRAIN".NOTE;
	
CREATE TABLE "BRAIN".NOTE
(
    NOTE_ID VARCHAR(64) NOT NULL,
    STUDENT_ID VARCHAR(64) NOT NULL,
    COURS_ID VARCHAR(64) NOT NULL,
    ENSEIGNANT_ID VARCHAR(64) NOT NULL,
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (NOTE_ID),
    FOREIGN KEY (COURS_ID) REFERENCES COURS(COURS_ID),
    FOREIGN KEY (ENSEIGNANT_ID) REFERENCES ENSEIGNANT(ENSEIGNANT_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);

DROP TABLE "BRAIN".NOTE;
	
CREATE TABLE "BRAIN".NOTE
(
    NOTE_ID VARCHAR(64) NOT NULL,
    STUDENT_ID VARCHAR(64) NOT NULL,
    COURS_ID VARCHAR(64) NOT NULL,
    ENSEIGNANT_ID VARCHAR(64) NOT NULL,
    STATE_DB VARCHAR(64) DEFAULT 'Business_Status_StateDb_Create',
    DT_CREATED DATE,
    DT_MODIFIED TIMESTAMP,
    USER_CREATED VARCHAR(64) NOT NULL,
    USER_MODIFIED VARCHAR(64),

    PRIMARY KEY (NOTE_ID),
    FOREIGN KEY (COURS_ID) REFERENCES COURS(COURS_ID),
    FOREIGN KEY (ENSEIGNANT_ID) REFERENCES ENSEIGNANT(ENSEIGNANT_ID),
    FOREIGN KEY (USER_CREATED) REFERENCES USERS(USERS_ID),
    FOREIGN KEY (USER_MODIFIED) REFERENCES USERS(USERS_ID)
);



	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	/*

create table "BRAIN".ALGORITHME
(
	ALGORITHME_ID VARCHAR(64) not null primary key,
	ENTITY VARCHAR(64) not null,
	ANNEE_ACADEMIC VARCHAR(64) not null,
	DT_CREATED DATE,
	DT_MODIFIED TIMESTAMP,
	USER_CREATED VARCHAR(64),
	USER_MODIFIED VARCHAR(64)
);



create table "BRAIN".TRIMESTRE
(
	TRIMESTRE_ID VARCHAR(64) not null primary key,
	DATE_OUVERTURE DATE not null,
	DATE_FERMETURE DATE,
	ANNEE_ACADEMIC VARCHAR(64) not null,
	DT_CREATED DATE,
	DT_MODIFIED TIMESTAMP,
	USER_CREATED VARCHAR(64),
	USER_MODIFIED VARCHAR(64)
);



create table "BRAIN".SEQUENCES
(
	SEQUENCES_ID VARCHAR(64) not null primary key,
	DATE_OUVERTURE DATE not null,
	DATE_FERMETURE DATE,
	TRIMESTRE_ID VARCHAR(64) not null,
	ANNEE_ACADEMIC VARCHAR(64) not null,
	DT_CREATED DATE,
	DT_MODIFIED TIMESTAMP,
	USER_CREATED VARCHAR(64),
	USER_MODIFIED VARCHAR(64)
);



create table "BRAIN".ALGORITHME
(
	ALGORITHME_ID VARCHAR(64) not null primary key,
	ENTITY VARCHAR(64) not null,
	ANNEE_ACADEMIC VARCHAR(64) not null,
	DT_CREATED DATE,
	DT_MODIFIED TIMESTAMP,
	USER_CREATED VARCHAR(64),
	USER_MODIFIED VARCHAR(64)
);

*/
