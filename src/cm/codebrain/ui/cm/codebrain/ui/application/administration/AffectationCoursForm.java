/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cm.codebrain.ui.application.administration;

import cm.codebrain.main.business.controller.CodeBrainExceptions;
import cm.codebrain.ui.application.MessageForm;
import cm.codebrain.ui.application.ModelForm;
import cm.codebrain.ui.application.backoffice.GroupSalleForm;
import cm.codebrain.ui.application.controller.Dictionnaire;
import cm.codebrain.ui.application.controller.FormParameters;
import cm.codebrain.ui.application.enumerations.EnumLibelles;
import cm.codebrain.ui.application.implement.Executable;
import cm.codebrain.ui.application.security.Loading;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author KSA-INET
 */
public class AffectationCoursForm extends ModelForm {

    private final String entityEnseignant = "Enseignant";
    private final String entityCours = "Cours";
    private List<HashMap> listModelsOriginal;
    /**
     * Creates new form CategorieForm
     *
     * @param title
     */
    public AffectationCoursForm(String title) {
        super(title, 950, 500);

        createList(true);
        this.showMenuBar();
    }

    public void createForm() {

        this.entity = "AffectationCours";
        initComponents();
        setAllComponents(matriculeInput, firstNameInput, lastNameInput);
    }

    public void addActionSupplementaire() {
        eventEnseignant();
        loadGrid();
    }

    public void makeModelData() {
        super.makeModelData();
        modelFinal.put(entityEnseignant.toLowerCase() + "Id", FormParameters.get(entityEnseignant.toLowerCase() + "Id"));
        modelFinal.put(entityCours.toLowerCase() + "Id", FormParameters.get(entityCours.toLowerCase() + "Id"));
    }

    protected void eventActionRef() {
    }

    private void loadGrid() {
        Loading.show(btnValider, new Executable() {
            @Override
            public List<HashMap> execute() throws Exception {
                
                HashMap[] args = null;

                listModelsOriginal = null;
                try {
                    listModelsOriginal = getListModelForSelect(null, entityCours, null, null, args);
                } catch (Exception ex) {
                    Logger.getLogger(GroupSalleForm.class.getName()).log(Level.SEVERE, null, ex);
                }

                listModelsOriginal.stream().map((model) -> {
                    Object[] newRow = {false, model.get("code"), model.get("libelleFr"), model.get("libelleEn")};
                    return newRow;
                }).forEachOrdered((newRow) -> {
                    ((DefaultTableModel) ((JTable) coursListInput).getModel()).addRow(newRow);
                });
                
                return listModelsOriginal;
            }

            @Override
            public void error(CodeBrainExceptions ex) {
                MessageForm.showsError(new CodeBrainExceptions(ex).getMessage(), "Message", false, null);
            }
        });

    }

    protected void eventEnseignant() {

        String[][] parametresGrid = {
            {"matricule", Dictionnaire.get(EnumLibelles.Business_Libelle_Matricule)},
            {"firstName", Dictionnaire.get(EnumLibelles.Business_Libelle_nom)},
            {"lastName",
                Dictionnaire.get(EnumLibelles.Business_Libelle_prenom)}};

        addAction(matriculeInput, entityEnseignant, entityEnseignant.toLowerCase() + "Id", parametresGrid, null, null, matriculeInput, firstNameInput, lastNameInput);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel mainPanel = new javax.swing.JPanel();
        javax.swing.JPanel panelContent = new javax.swing.JPanel();
        javax.swing.JPanel panelCategorie1 = new javax.swing.JPanel();
        javax.swing.JLabel labelLevel1 = new javax.swing.JLabel();
        matriculeInput = new javax.swing.JTextField();
        firstNameInput = new javax.swing.JTextField();
        lastNameInput = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        javax.swing.JScrollPane jScrollPane3 = new javax.swing.JScrollPane();
        coursListInput = new javax.swing.JTable();
        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        javax.swing.JScrollPane jScrollPane4 = new javax.swing.JScrollPane();
        coursInputsTable = new javax.swing.JTable();
        inButton = new javax.swing.JButton();
        outButton = new javax.swing.JButton();

        mainPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        panelContent.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        panelCategorie1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), Dictionnaire.get(EnumLibelles.Business_Libelle_Enseignant))); // NOI18N
        panelCategorie1.setOpaque(false);

        labelLevel1.setText(Dictionnaire.get(EnumLibelles.Business_Libelle_Matricule, true)); // NOI18N
        labelLevel1.setName("usernameLabel"); // NOI18N

        matriculeInput.setName("matricule"); // NOI18N
        fieldSearch("AffectationCours->enseignantId->matricule", matriculeInput);
        fieldsRequired.add(matriculeInput);

        firstNameInput.setEditable(false);
        firstNameInput.setName("firstName"); // NOI18N
        this.setRef(firstNameInput);
        fieldSearch("AffectationCours->EnseignantId->firstName", firstNameInput);

        lastNameInput.setEditable(false);
        lastNameInput.setName("lastName"); // NOI18N
        fieldSearch("AffectationCours->EnseignantId->lastName", lastNameInput);

        javax.swing.GroupLayout panelCategorie1Layout = new javax.swing.GroupLayout(panelCategorie1);
        panelCategorie1.setLayout(panelCategorie1Layout);
        panelCategorie1Layout.setHorizontalGroup(
            panelCategorie1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCategorie1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelLevel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(matriculeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelCategorie1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastNameInput)
                    .addComponent(firstNameInput))
                .addContainerGap())
        );
        panelCategorie1Layout.setVerticalGroup(
            panelCategorie1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCategorie1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCategorie1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLevel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(matriculeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lastNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, Dictionnaire.get(EnumLibelles.Business_Libelle_ListeCours), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 14))); // NOI18N

        jScrollPane3.setAutoscrolls(true);

        coursListInput.setModel(setModelDataTable(Arrays.asList(Boolean.class, null, null, null),
            "",
            Dictionnaire.get(EnumLibelles.Business_Libelle_Matricule),
            Dictionnaire.get(EnumLibelles.Business_Libelle_IntituleFr),
            Dictionnaire.get(EnumLibelles.Business_Libelle_IntituleEn)));
    coursListInput.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
    coursListInput.setIntercellSpacing(new java.awt.Dimension(4, 1));
    coursListInput.setShowHorizontalLines(true);
    coursListInput.setShowVerticalLines(true);
    coursListInput.putClientProperty("Quaqua.Table.style", "striped");
    setSelectedCheckbox(coursListInput, true);
    resizeTableColumnModel(coursListInput, 30, 90, 140, 140);
    jScrollPane3.setViewportView(coursListInput);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
    );

    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, Dictionnaire.get(EnumLibelles.Business_Libelle_Cours, true), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 14))); // NOI18N

    jScrollPane4.setAutoscrolls(true);

    coursInputsTable.setModel(setModelDataTable(Arrays.asList(Boolean.class, null, null, null),
        "",
        Dictionnaire.get(EnumLibelles.Business_Libelle_Matricule),
        Dictionnaire.get(EnumLibelles.Business_Libelle_IntituleFr),
        Dictionnaire.get(EnumLibelles.Business_Libelle_IntituleEn)));
coursInputsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
coursInputsTable.setIntercellSpacing(new java.awt.Dimension(4, 1));
coursInputsTable.setShowHorizontalLines(true);
coursInputsTable.setShowVerticalLines(true);
coursInputsTable.getTableHeader().setResizingAllowed(false);
coursInputsTable.getTableHeader().setReorderingAllowed(false);
coursInputsTable.putClientProperty("Quaqua.Table.style", "striped");
setSelectedCheckbox(coursInputsTable, true);
resizeTableColumnModel(coursInputsTable, 30, 90, 140, 140);
jScrollPane4.setViewportView(coursInputsTable);

javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
jPanel2.setLayout(jPanel2Layout);
jPanel2Layout.setHorizontalGroup(
    jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
        .addGap(0, 0, 0)
        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
    );

    inButton.setIcon(new ImageIcon(Dictionnaire.getResource(NEXT).getScaledInstance(width, height, 0)));

    outButton.setIcon(new ImageIcon(Dictionnaire.getResource(PREVIEW).getScaledInstance(width, height, 0)));

    javax.swing.GroupLayout panelContentLayout = new javax.swing.GroupLayout(panelContent);
    panelContent.setLayout(panelContentLayout);
    panelContentLayout.setHorizontalGroup(
        panelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(panelContentLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(panelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelCategorie1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelContentLayout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(panelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(outButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(inButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addContainerGap())
    );
    panelContentLayout.setVerticalGroup(
        panelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(panelContentLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(panelCategorie1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(panelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelContentLayout.createSequentialGroup()
                    .addGap(106, 106, 106)
                    .addComponent(inButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(outButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 93, Short.MAX_VALUE))
                .addGroup(panelContentLayout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(panelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addContainerGap())
    );

    javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
    mainPanel.setLayout(mainPanelLayout);
    mainPanelLayout.setHorizontalGroup(
        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(mainPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(panelContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    mainPanelLayout.setVerticalGroup(
        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(mainPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(panelContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );

    getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable coursInputsTable;
    private javax.swing.JTable coursListInput;
    private javax.swing.JTextField firstNameInput;
    private javax.swing.JButton inButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField lastNameInput;
    private javax.swing.JTextField matriculeInput;
    private javax.swing.JButton outButton;
    // End of variables declaration//GEN-END:variables

}
